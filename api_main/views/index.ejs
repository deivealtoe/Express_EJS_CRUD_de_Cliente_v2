<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel='stylesheet' href='/stylesheets/style.css'/>
    <link rel='stylesheet' href='/stylesheets/index.css'/>

    <title>Trabalho 2</title>
</head>
<body>

    <header>
        <a href="/">Index</a>
        <a href="/clientes">Clientes</a>
        <a href="/clientes/cadastro">Cadastro</a>
    </header>

    <div id="corpo_do_site">

        <h1>Trabalho 2</h1>

        <h2>Desenvolvimento de Sistemas Web</h2>

        <p><b>Data de Entrega:</b> 12/11/20 23:59:59. A cada dia de atraso na entrega o valor máximo do trabalho será reduzido em 2 pontos. Após 5 dias não valerá nota a entrega do trabalho.</p>

        <p><b>Modo de entrega:</b> Envio do código do projeto via E-mail, somente após o aceite em resposta será considerado entregue. E-mail do Professor lucastalves@ucl.br, favor colocar os nomes completos dos alunos no corpo do e-mail. O código deve ser Zipado e colocado no seu “Drive do e-mail UCL”, compartilhado e enviado o link por e-mail.</p>

        <p><u>Lembre-se</u> de não enviar a pasta “node_modules” para que o arquivo fique pequeno!</p>

        <p><b>Tecnologia utilizada:</b> O projeto deve ser desenvolvido utilizando somente os recursos disponíveis pelo node.js, express.js e axios. Não sendo permitido utilização de outros frameworks ou bibliotecas não utilizadas em sala de aula no Back-end. No Front-end pode ser usado qualquer framework ou biblioteca (lembrando que elas devem vir acompanhadas no código enviado).</p>

        <p><b>Componentes do trabalho:</b> O projeto poderá ser construído por 1 ou 2 alunos. Em caso de 2 alunos a nota será aplicada para os dois participantes.</p>

        <h3>Tema e escopo:</h3>

        <p>A segunda entrega do trabalho, consiste em uma melhoria no sistema de cadastro de Cliente do primeiro trabalho. Será separado o Servidor de páginas e da gravação de dados.</p>

        <h3>1. Nessa segunda versão deve possuir duas páginas, uma para listagem e outro para cadastro. Os Dados devem ser gravados via acesso de API que será responsável por gravar os dados no arquivo.</h3>
        
        <h3>2. A página de listagem dos registros gravados deve mostrar todos os campos do cliente, exceto o campo “senha”.</h3>

        <h3>3. Ao clicar em um cliente o sistema deve abrir o cadastro do respectivo cliente passando o id do cliente para a página do cadastro. Deve possuir um botão para incluir um novo cliente no cadastro.</h3>

        <h3>4. A Pagina de cadastro não deve mostrar a listagem, sendo necessário ao gravar na tela de cadastro voltar para página de listagem.</h3>

        <h3>5. Serão observadas as seguintes entradas de informações:</h3>

        <h4>Obrigatórios para gravação (requeridos):</h4>

        <ul>
            <li>ID (Código interno do cliente)</li>
            <li>Nome</li>
            <li>Sobrenome</li>
            <li>Senha</li>
            <li>E-mail</li>
        </ul>

        <h4>Não Obrigatórios para gravação mas deve ser possível informar:</h4>

        <ul>
            <li>Sexo (opções = M – Masculino / F – Feminino)</li>
            <li>CPF</li>
            <li>RG</li>
            <li>Telefone</li>
            <li>Data de Nascimento (formato = dd/mm/aaaa)</li>
            <li>Estado Civil (opções = 1-Solteiro / 2-Casado / 3-Divorciado / 4-Viúvo / 5-Separado)</li>
            <li>CEP (formato = 00000-000)</li>
            <li>Endereço (campo de texto único)</li>
        </ul>

        <h3>6. Deve ser possível cadastrar, alterar e excluir registros.</h3>
        <h3>7. Para ser cadastrado o usuário precisa obrigatoriamente informar os campos obrigatórios (requeridos).</h3>
        <h3>8. Os campos (Data de Nascimento e CEP) que possuem formatos devem ser validados nos seus formatos específicos.</h3>
        <h3>9. Os campos (Sexo e Estado Civil) de opções devem armazenar somente o valor e não a descrição.</h3>
        <h3>10. Caso os dados digitados não estejam corretos o sistema deve apresentar os erros de modo que o usuário possa corrigir. Essas validações devem ser feitas no servidor (Back-end).</h3>

        <h3>O sistema deve possuir a capacidade de salvar os dados em um arquivo no formato JSON.</h3>

        <p>Exemplo:</p>

        <pre>
            [
                {
                    "Id": 1,
                    "Nome": "Lucas",
                    "Sobrenome": "Alves",
                    "Senha": "123",
                    "E-mail": "lucastalves@ucl.br",
                    "Sexo": "M",
                    "CPF": "12345678910",
                    "RG": "1355553",
                    "Telefone": "999999999",
                    "DataNascimento": "19/03/1984",
                    "EstadoCivil": 2,
                    "CEP": "29123456",
                    "Endereco": "Nome da minha Rua, 100, Serra, ES"
                },
                {
                    "Id": 2,
                    "Nome": "cliente",
                    "Sobrenome": "qualquer",
                    "Senha": "456",
                    "E-mail": "cliente@ucl.br",
                    "Sexo": "F",
                    "CPF": "",
                    "RG": "",
                    "Telefone": "987654321",
                    "DataNascimento": "",
                    "EstadoCivil": 1,
                    "CEP": "",
                    "Endereco": ""
                }
            ]
        </pre>

        <h3>11. Toda gravação dos dados da página de cadastro deve ser enviada para API de Clientes que deve rodar em outro servidor.</h3>

        <h3>12. A API deve fornecer os as Informações dos Clientes e fornecer os métodos para listar, salvar, alterar e deletar os registros dos clientes</h3>

        <h2>Sistema de avaliação</h2>

        <p><b>Funcionalidade:</b> Será utilizado como critério de avaliação se efetivamente o sistema está funcionando</p>

        <p><b>Código bem escrito:</b> Será utilizado como critério de avaliação se o código é de fácil leitura e boa redação, bem indentado e com bons nomes para classes e métodos.</p>

    </div>
    
</body>
</html>
